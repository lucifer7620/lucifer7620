#include <iostream>
using namespace std;

int front = -1, rear = -1;
const int m=5;
int cqueue[m];

void insertion(){
    int x;
    if(front == rear+1 || (front == 0 && rear == 4)){
        cout<<"Queue is Overflown"<<endl;
    }else{
        cout<<"Enter element: ";
        cin>>x;
        if(rear == -1 && front == -1){
            rear = 0;
            front = 0;
        }else if(rear == m-1){
            rear = 0;
        }else{
            rear++;
        }
        cqueue[rear] = x;
    }
}

void deletion(){
    int x;
    if(rear == -1 && front == -1){
        cout<<"Queue is Underflown"<<endl;
    }else{
        x = cqueue[front];
        if(front == rear){
            front = -1;
            rear = -1;
        }else if(front == m-1){
            front = 0;
        }else{
            front++;
        }
    }
    cout<<"Deleted element from queue is: "<<x<<endl;
}

void display(){
    if(rear == -1 && front == -1){
        cout<<"Queue is underflown"<<endl;
    }else{
        if(front>rear){
            for(int i = front; i<=m-1; i++){
                cout<<cqueue[i]<<" ";
            }
            for(int i = 0; i<=rear; i++){
                cout<<cqueue[i]<<" ";
            }
        }else{
            for(int i = front; i<=rear; i++){
                cout<<cqueue[i]<<" ";
            }
        }
        cout<<endl;
    }
}

int main(){
    int choice;
    int ask;
    do{
        cout<<"1. Insertion\n2. Deletion\n3. Display\n4. Exit"<<endl;
        cout<<"Enter your choice: ";
        cin>>choice;
        switch(choice){
            case 1:
                insertion();
                break;
            case 2:
                deletion();
                break;
            case 3:
                display();
                break;
            case 4:
                return 0;
            default:
                cout<<"Invalid choice!!!"<<endl;      
        }
        cout<<"Do you want to continue?(1/0): ";
        cin>>ask;
    }while(ask == 1 || ask == 1);
    return 0;
}